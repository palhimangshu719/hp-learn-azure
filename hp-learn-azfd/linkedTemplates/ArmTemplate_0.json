{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "hp-learn-azfd"
		},
		"ls_hp_azdf_learn_blob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_hp_azdf_learn_blob'"
		},
		"ls_hp_azdf_learn_db_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_hp_azdf_learn_db'"
		},
		"ls_hp_azdf_learn_on_prem_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_hp_azdf_learn_on_prem'"
		},
		"ls_hp_azdf_learn_on_prem_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\LAPTOP-S9NVA18F\\Users\\himan\\OneDrive\\Documents\\Interview_Prep\\Certifications\\Microsoft_Certifications\\DB-200\\AZ-DataFactory-Udemy\\from-10082020\\datasets"
		},
		"ls_hp_azdf_learn_on_prem_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "himangshu.pal1986@gmail.com"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_hp_azdf_learn_blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Read data from on blob storage",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_hp_azdf_learn_blob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_hp_azdf_learn_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Linked service to connect hp_azdf_learn_db.",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_hp_azdf_learn_db_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/irselfhostedmylocalserver')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "To access files in my local machine.  ",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_copy_into_blob_container')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_hp_azdf_learn_blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "copydataactivityfile"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_hp_azdf_learn_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_read_blob_container')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_hp_azdf_learn_blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "name_id_address.txt",
						"container": "copydataactivityfile"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "address",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_hp_azdf_learn_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_read_blob_dataflow_container_salesdata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_hp_azdf_learn_blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sales-data-part1.csv",
						"container": "copydataactivityfile"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "InvoiceNo",
						"type": "String"
					},
					{
						"name": "StockCode",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "InvoiceDate",
						"type": "String"
					},
					{
						"name": "UnitPrice",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_hp_azdf_learn_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_saledata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_hp_azdf_learn_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "invoiceno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "stockcode",
						"type": "varchar"
					},
					{
						"name": "description",
						"type": "varchar"
					},
					{
						"name": "quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "invoicedate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "unitprice",
						"type": "float",
						"precision": 15
					},
					{
						"name": "customerid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "country",
						"type": "varchar"
					},
					{
						"name": "customername",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "salesdata"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_hp_azdf_learn_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_write_to_hp_azdf_learn_db')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_hp_azdf_learn_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "address",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "demo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_hp_azdf_learn_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_hp_azdf_learn_on_prem')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Read data from on prem",
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('ls_hp_azdf_learn_on_prem_properties_typeProperties_host')]",
					"userId": "[parameters('ls_hp_azdf_learn_on_prem_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_hp_azdf_learn_on_prem_password')]"
					}
				},
				"connectVia": {
					"referenceName": "irselfhostedmylocalserver",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/irselfhostedmylocalserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_data_from_azcloud')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy data from on blob storage. ",
				"activities": [
					{
						"name": "Copy data From BLOB Location",
						"description": "Copy data from BLOB container",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "copydataactivityfile//name_id_address.txt"
							},
							{
								"name": "Destination",
								"value": "dbo.demo"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "address",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "address",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_read_blob_container",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_write_to_hp_azdf_learn_db",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "copy_data_activity"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_read_blob_container')]",
				"[concat(variables('factoryId'), '/datasets/ds_write_to_hp_azdf_learn_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_copy_csv_from_on_premise_to_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_hp_azdf_learn_on_prem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"folderPath": "dataflow"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_hp_azdf_learn_on_prem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_get_meta_data_from_on__premise')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_hp_azdf_learn_on_prem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"folderPath": "get_meta_data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_hp_azdf_learn_on_prem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_read_on_premise_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_hp_azdf_learn_on_prem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "name_id_address.txt"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "address",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_hp_azdf_learn_on_prem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_source_transformation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "data flow for source transformation",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_read_blob_dataflow_container_salesdata",
								"type": "DatasetReference"
							},
							"name": "readsalesdata"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sql_saledata",
								"type": "DatasetReference"
							},
							"name": "writesalesdata"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tInvoiceNo as integer,\n\t\tStockCode as string,\n\t\tDescription as string,\n\t\tQuantity as integer,\n\t\tInvoiceDate as timestamp 'MM/dd/yyyy HH:mm',\n\t\tUnitPrice as float,\n\t\tCustomerID as integer,\n\t\tCountry as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> readsalesdata\nreadsalesdata sink(input(\n\t\tinvoiceno as integer,\n\t\tstockcode as string,\n\t\tdescription as string,\n\t\tquantity as integer,\n\t\tinvoicedate as timestamp,\n\t\tunitprice as double,\n\t\tcustomerid as integer,\n\t\tcountry as string,\n\t\tcustomername as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tinvoiceno = InvoiceNo,\n\t\tstockcode = StockCode,\n\t\tdescription = Description,\n\t\tquantity = Quantity,\n\t\tinvoicedate = InvoiceDate,\n\t\tunitprice = UnitPrice,\n\t\tcustomerid = CustomerID,\n\t\tcountry = Country\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> writesalesdata"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_read_blob_dataflow_container_salesdata')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql_saledata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_append_variable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Practice append variable activity",
				"activities": [
					{
						"name": "Get Metadata",
						"description": "Get the list of objects in a on premise file location",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_get_meta_data_from_on__premise",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter Out File",
						"description": "Filter out the files which starts with 'F'",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name, 'e')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition",
						"description": "Find files with matching condition",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Filter Out File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(activity('Filter Out File').output)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Append variable",
									"description": "If condition is False then execute append variable",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "NewVariableDemo",
										"value": "All File selected starts with 'F'"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 5
									}
								}
							]
						}
					}
				],
				"variables": {
					"NewVariableDemo": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "control-flow-activity"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_get_meta_data_from_on__premise')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_data_from_onpremise')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy data from on premise location. ",
				"activities": [
					{
						"name": "Copy data From On Premise Location",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "address",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "address",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_read_on_premise_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_write_to_hp_azdf_learn_db",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "copy_data_activity"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_read_on_premise_source')]",
				"[concat(variables('factoryId'), '/datasets/ds_write_to_hp_azdf_learn_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_data_from_onpremise_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy csv file from on premise location to blob container. ",
				"activities": [
					{
						"name": "Filter Required File",
						"description": "Filter the sale csv file ",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name, 'sales')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_copy_csv_from_on_premise_to_blob",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Required File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Required File').output.Value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true,
												"fileFilter": {
													"value": "@{item().name}",
													"type": "Expression"
												}
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_copy_csv_from_on_premise_to_blob",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_copy_into_blob_container",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "copy_data_activity"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_copy_csv_from_on_premise_to_blob')]",
				"[concat(variables('factoryId'), '/datasets/ds_copy_into_blob_container')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_df_source_transformation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Create source transformation data flow",
				"activities": [
					{
						"name": "dataflow_source_transformation",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_source_transformation",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"readsalesdata": {},
									"writesalesdata": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"folder": {
					"name": "data_flow_activity"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_source_transformation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_filter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Practice get meta data activity",
				"activities": [
					{
						"name": "Get Metadata",
						"description": "Get the list of objects in a on premise file location",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_get_meta_data_from_on__premise",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter Out File",
						"description": "Filter out the files which starts with 'F'",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name, 'F')",
								"type": "Expression"
							}
						}
					}
				],
				"folder": {
					"name": "control-flow-activity"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_get_meta_data_from_on__premise')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_for_each')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Practice for each activity",
				"activities": [
					{
						"name": "Get Metadata",
						"description": "Get the list of objects in a on premise file location",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_get_meta_data_from_on__premise",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter Out File",
						"description": "Filter out the files which starts with 'F'",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name, 'F')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition",
						"description": "Find files with matching condition",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Filter Out File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(activity('Filter Out File').output)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 5
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Append variable1",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "NewVariableDemo",
										"value": {
											"value": "@activity('Filter Out File').output",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "ForEach",
						"description": "For each file name returned by filter activity - do something. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Out File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Out File').output.Value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy filtered files",
									"description": "copy filtered files into Data Lake storage",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "get_meta_data/"
										},
										{
											"name": "Destination",
											"value": "copydataactivityfile//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true,
												"fileFilter": {
													"value": "@{item().name}",
													"type": "Expression"
												}
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_get_meta_data_from_on__premise",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_copy_into_blob_container",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"variables": {
					"NewVariableDemo": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "control-flow-activity"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_get_meta_data_from_on__premise')]",
				"[concat(variables('factoryId'), '/datasets/ds_copy_into_blob_container')]"
			]
		}
	]
}