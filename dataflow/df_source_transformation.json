{
	"name": "df_source_transformation",
	"properties": {
		"description": "data flow for source transformation",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_read_blob_dataflow_container_salesdata",
						"type": "DatasetReference"
					},
					"name": "readsalesdata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_saledata",
						"type": "DatasetReference"
					},
					"name": "writesalesdata"
				}
			],
			"transformations": [],
			"script": "source(output(\n\t\tInvoiceNo as integer,\n\t\tStockCode as string,\n\t\tDescription as string,\n\t\tQuantity as integer,\n\t\tInvoiceDate as timestamp 'MM/dd/yyyy HH:mm:ss',\n\t\tUnitPrice as float,\n\t\tCustomerID as integer,\n\t\tCountry as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> readsalesdata\nreadsalesdata sink(input(\n\t\tinvoiceno as integer,\n\t\tstockcode as string,\n\t\tdescription as string,\n\t\tquantity as integer,\n\t\tinvoicedate as timestamp,\n\t\tunitprice as double,\n\t\tcustomerid as integer,\n\t\tcountry as string,\n\t\tcustomername as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> writesalesdata"
		}
	}
}